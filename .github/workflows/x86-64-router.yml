# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: x86-64-router

# on:
#   watch:
#     types: started
on:
  workflow_dispatch:

jobs:

  build_openwrt:

    name: Build OpenWrt and release
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: Update feeds
        run: |
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          sed -i 's/#src-git helloworld/src-git helloworld/' feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config* && touch ./.config
          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_ROOTFS_TARGZ=y
          EOF
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-app-adbyby-plus=y
          CONFIG_PACKAGE_luci-app-aria2=y
          CONFIG_PACKAGE_luci-app-transmission=y
          CONFIG_PACKAGE_ariang=y
          CONFIG_PACKAGE_luci-app-qbittorrent=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-app-v2ray-server=y
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-verysync=y
          CONFIG_PACKAGE_luci-app-kodexplorer=y
          CONFIG_PACKAGE_luci-app-baidupcs-web=y
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-frps=y
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_screen=y
          CONFIG_PACKAGE_tree=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_tcpdump=y
          # CONFIG_TARGET_IMAGES_PAD is not set
          # CONFIG_VMDK_IMAGES is not set
          # CONFIG_EFI_IMAGES is not set
          CONFIG_PACKAGE_v2ray=y
          CONFIG_V2RAY_JSON_INTERNAL=y
          CONFIG_V2RAY_EXCLUDE_V2CTL=y
          CONFIG_V2RAY_EXCLUDE_ASSETS=y
          CONFIG_V2RAY_COMPRESS_UPX=y
          CONFIG_V2RAY_DISABLE_NONE=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_v2ray-plugin_INCLUDE_GOPROXY=y
          # CONFIG_PACKAGE_autosamba is not set
          # CONFIG_PACKAGE_luci-app-samba is not set
          # CONFIG_PACKAGE_samba36-server is not set
          CONFIG_PACKAGE_samba4-server=y
          CONFIG_PACKAGE_luci-app-samba4=y
          CONFIG_PACKAGE_luci-i18n-samba4-zh-cn=y
          # CONFIG_PACKAGE_python3-numpy is not set
          CONFIG_PACKAGE_python3-pip=y
          CONFIG_PACKAGE_python3-requests=y

          CONFIG_PACKAGE_kmod-ath9k=y
          CONFIG_PACKAGE_kmod-cfg80211=y
          CONFIG_PACKAGE_hostapd=y
          CONFIG_PACKAGE_hostapd-basic=y
          CONFIG_PACKAGE_hostapd-mini=y
          CONFIG_WPA_RFKILL_SUPPORT=y
          CONFIG_DRIVER_WEXT_SUPPORT=y
          CONFIG_DRIVER_11N_SUPPORT=y
          CONFIG_DRIVER_11AC_SUPPORT=y
          CONFIG_DRIVER_11AX_SUPPORT=y
          CONFIG_WPA_ENABLE_W=y
          CONFIG_PACKAGE_iw-full=y
          CONFIG_PACKAGE_wpa-supplicant=y

          CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
          CONFIG_PACKAGE_kmod-usb-net-huawei-cdc-ncm=y
          CONFIG_PACKAGE_kmod-usb-net-ipheth=y
          CONFIG_PACKAGE_kmod-usb-net-rndis=y
          CONFIG_PACKAGE_kmod-usb-ohci=y
          CONFIG_PACKAGE_kmod-usb-uhci=y

          CONFIG_PACKAGE_usbutils=y
          CONFIG_PACKAGE_kmod-usb2=y
          CONFIG_PACKAGE_libimobiledevice-utils=y
          CONFIG_PACKAGE_libusbmuxd-utils=y
          CONFIG_PACKAGE_plistutil=y
          CONFIG_PACKAGE_usbmuxd=y
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Create release
        if: github.event == 'push'
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false      

      - name: Upload release asset
        if: github.event == 'push'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/targets/*/*/